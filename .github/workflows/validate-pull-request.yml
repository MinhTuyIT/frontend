# name: Test, Scan and Analyze Frontend
# on: 
#   pull_request:
# jobs:
#   check-cypress-secret:
#     name: Check Cypress Token presence
#     if: ${{ github.ref_name != 'dev' && github.ref_name != 'staging' && github.ref_name != 'main'}}
#     runs-on: ubuntu-latest
#     outputs:
#       has_cypress_token: ${{ steps.check_token.outputs.has_cypress_token }}
#     steps:
#       - name: Check CYPRESS_RECORD_KEY presence
#         id: check_token
#         run: |
#           if [[ ! -z "${CYPRESS_RECORD_KEY}" ]]; then
#             echo "has_cypress_token=true" >> $GITHUB_OUTPUT
#           else
#             echo "has_cypress_token=false" >> $GITHUB_OUTPUT
#           fi
#         env:
#           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
#           GITHUB_OUTPUT: ${{ github.output }}

#   run-cypress-tests:
#     name: Run Cypress Tests
#     runs-on: ubuntu-latest
#     needs: check-cypress-secret
#     strategy:
#       fail-fast: false # https://github.com/cypress-io/github-action/issues/48
#       matrix:
#         containers: [1, 2] # Uses 2 parallel instances
#     if: needs.check-cypress-secret.outputs.has_cypress_token == 'true' && github.ref_name != 'dev' && github.ref_name != 'staging' && github.ref_name != 'main'
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Cypress run
#         uses: cypress-io/github-action@v4
#         with:
#           install-command: yarn install
#           browser: chrome
#           start: yarn dev:instrumented
#           wait-on: "http://localhost:3000"
#           record: true
#           parallel: true
#         env:
#           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           PUPPETEER_SKIP_DOWNLOAD: true
#       - uses: actions/upload-artifact@v3
#         with:
#           name: lcov-report
#           path: coverage

#   check-sonar-secret:
#     name: Check SONAR TOKEN presence
#     if: always()
#     runs-on: ubuntu-latest
#     outputs:
#       has_sonar_token: ${{ steps.check_token.outputs.has_sonar_token }}
#     steps:
#       - name: Check SONAR_TOKEN presence
#         id: check_token
#         run: |
#           if [[ ! -z "${SONAR_TOKEN}" ]]; then
#             echo "has_sonar_token=true" >> $GITHUB_OUTPUT
#           else
#             echo "has_sonar_token=false" >> $GITHUB_OUTPUT
#           fi
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           GITHUB_OUTPUT: ${{ github.output }}

#   run-sonarcloud-analysis:
#     name: Run SonarCloud Analysis
#     needs: check-sonar-secret
#     runs-on: ubuntu-latest
#     if: needs.check-sonar-secret.outputs.has_sonar_token == 'true'
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       # - uses: actions/download-artifact@v3 COMMENT THIS BACK IN WHEN COVERAGE REPORTS ARE WORKING AGAIN
#       #   with:
#       #     name: lcov-report
#       #     path: coverage
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#   eslint:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: "18.x"
#       - run: yarn install
#       - uses: sibiraj-s/action-eslint@v3
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           eslint-args: "--ignore-path=.gitignore --quiet"
#           extensions: "js,jsx,ts,tsx"
#           annotations: true
#           ignore-path: .eslintignore
